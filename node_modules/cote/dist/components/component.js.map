{"version":3,"sources":["../../src/components/component.js"],"names":["EventEmitter","require","EventEmitter2","Discovery","module","exports","advertisement","discoveryOptions","wildcard","delimiter","newListener","maxListeners","key","constructor","environment","axon_type","type","address","discovery","on","obj","oppo","namespace","onAdded","emit","onRemoved","sock","close","stop"],"mappings":";;;;;;;;;;AAAA,IAAMA,eAAeC,QAAQ,eAAR,EAAyBC,aAA9C;AACA,IAAMC,YAAYF,QAAQ,aAAR,CAAlB;;AAEAG,OAAOC,OAAP;AAAA;;AACI,uBAAYC,aAAZ,EAA2BC,gBAA3B,EAA6C;AAAA;;AAAA,0HACnC;AACFC,sBAAU,IADR,EACc;AAChBC,uBAAW,IAFT,EAEe;AACjBC,yBAAa,KAHX,EAGkB;AACpBC,0BAAc,IAJZ,CAIkB;AAJlB,SADmC;;AAQzCL,sBAAcM,GAAd,GAAoB,MAAKC,WAAL,CAAiBC,WAAjB,GAA+B,IAA/B,IAAuCR,cAAcM,GAAd,IAAqB,EAA5D,CAApB;;AAEA,cAAKN,aAAL,GAAqBA,aAArB;AACA,cAAKA,aAAL,CAAmBS,SAAnB,GAA+B,MAAKC,IAApC;;AAEA,cAAKT,gBAAL,GAAwBA,oBAAoB,EAA5C;AACA,cAAKA,gBAAL,CAAsBU,OAAtB,GAAgC,MAAKV,gBAAL,CAAsBU,OAAtB,IAC5B,SADJ;AAdyC;AAgB5C;;AAjBL;AAAA;AAAA,yCAmBqB;AAAA;;AACb,iBAAKC,SAAL,GAAiB,IAAIf,SAAJ,CAAc,KAAKG,aAAnB,EACb,KAAKC,gBADQ,CAAjB;;AAGA,iBAAKW,SAAL,CAAeC,EAAf,CAAkB,OAAlB,EAA2B,UAACC,GAAD,EAAS;AAChC,oBACIA,IAAId,aAAJ,CAAkBS,SAAlB,IAA+B,OAAKM,IAApC,IACAD,IAAId,aAAJ,CAAkBM,GAAlB,IAAyB,OAAKN,aAAL,CAAmBM,GAD5C,IAEA,OAAKN,aAAL,CAAmBgB,SAAnB,IAAgCF,IAAId,aAAJ,CAAkBgB,SAHtD,EAIE;;AAEF,uBAAKC,OAAL,CAAaH,GAAb;AACA,uBAAKI,IAAL,CAAU,YAAV,EAAwBJ,GAAxB;AACH,aATD;AAUA,iBAAKF,SAAL,CAAeC,EAAf,CAAkB,SAAlB,EAA6B,UAACC,GAAD,EAAS;AAClC,oBACIA,IAAId,aAAJ,CAAkBS,SAAlB,IAA+B,OAAKM,IAApC,IACAD,IAAId,aAAJ,CAAkBM,GAAlB,IAAyB,OAAKN,aAAL,CAAmBM,GAD5C,IAEA,OAAKN,aAAL,CAAmBgB,SAAnB,IAAgCF,IAAId,aAAJ,CAAkBgB,SAHtD,EAIE;;AAEF,uBAAKG,SAAL,CAAeL,GAAf;AACA,uBAAKI,IAAL,CAAU,cAAV,EAA0BJ,GAA1B;AACH,aATD;AAUH;AA3CL;AAAA;AAAA,kCA6Cc,CAAG;AA7CjB;AAAA;AAAA,oCA+CgB,CAAG;AA/CnB;AAAA;AAAA,gCAiDY;AACJ,iBAAKM,IAAL,IAAa,KAAKA,IAAL,CAAUC,KAAV,EAAb;AACA,iBAAKT,SAAL,IAAkB,KAAKA,SAAL,CAAeU,IAAf,EAAlB;AACH;AApDL;;AAAA;AAAA,EAAyC5B,YAAzC","file":"component.js","sourcesContent":["const EventEmitter = require('eventemitter2').EventEmitter2;\nconst Discovery = require('./discovery');\n\nmodule.exports = class Component extends EventEmitter {\n    constructor(advertisement, discoveryOptions) {\n        super({\n            wildcard: true, // should the event emitter use wildcards.\n            delimiter: '::', // the delimiter used to segment namespaces, defaults to `.`.\n            newListener: false, // if you want to emit the newListener event set to true.\n            maxListeners: 2000, // the max number of listeners that can be assigned to an event, defaults to 10.\n        });\n\n        advertisement.key = this.constructor.environment + '$$' + (advertisement.key || '');\n\n        this.advertisement = advertisement;\n        this.advertisement.axon_type = this.type;\n\n        this.discoveryOptions = discoveryOptions || {};\n        this.discoveryOptions.address = this.discoveryOptions.address ||\n            '0.0.0.0';\n    }\n\n    startDiscovery() {\n        this.discovery = new Discovery(this.advertisement,\n            this.discoveryOptions);\n\n        this.discovery.on('added', (obj) => {\n            if (\n                obj.advertisement.axon_type != this.oppo ||\n                obj.advertisement.key != this.advertisement.key ||\n                this.advertisement.namespace != obj.advertisement.namespace\n            ) return;\n\n            this.onAdded(obj);\n            this.emit('cote:added', obj);\n        });\n        this.discovery.on('removed', (obj) => {\n            if (\n                obj.advertisement.axon_type != this.oppo ||\n                obj.advertisement.key != this.advertisement.key ||\n                this.advertisement.namespace != obj.advertisement.namespace\n            ) return;\n\n            this.onRemoved(obj);\n            this.emit('cote:removed', obj);\n        });\n    }\n\n    onAdded() { };\n\n    onRemoved() { };\n\n    close() {\n        this.sock && this.sock.close();\n        this.discovery && this.discovery.stop();\n    }\n};\n"]}