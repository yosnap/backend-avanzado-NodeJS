{"version":3,"sources":["../../src/components/requester.js"],"names":["Configurable","require","Monitorable","Component","axon","module","exports","advertisement","discoveryOptions","sock","types","type","set","startDiscovery","obj","address","constructor","useHostNames","hostName","alreadyConnected","socks","some","s","_host","remoteAddress","remotePort","port","connect","args","length","Promise","resolve","reject","send","err","res"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,eAAeC,QAAQ,gBAAR,CAArB;AACA,IAAMC,cAAcD,QAAQ,eAAR,CAApB;AACA,IAAME,YAAYF,QAAQ,aAAR,CAAlB;AACA,IAAMG,OAAOH,QAAQ,gBAAR,CAAb;;AAEAI,OAAOC,OAAP;AAAA;;AACI,uBAAYC,aAAZ,EAA2BC,gBAA3B,EAA6C;AAAA;;AAAA,0HACnCD,aADmC,EACpBC,gBADoB;;AAGzC,cAAKC,IAAL,GAAY,IAAIL,KAAKM,KAAL,CAAW,MAAKC,IAAhB,CAAJ,EAAZ;AACA,cAAKF,IAAL,CAAUG,GAAV,CAAc,eAAd,EAA+B,CAA/B;;AAEA,cAAKC,cAAL;AANyC;AAO5C;;AARL;AAAA;AAAA,gCAUYC,GAVZ,EAUiB;AAAA;;AACT,0HAAcA,GAAd;;AAEA,gBAAMC,UAAU,KAAKC,WAAL,CAAiBC,YAAjB,GAAgCH,IAAII,QAApC,GAA+CJ,IAAIC,OAAnE;;AAEA,gBAAMI,mBAAmB,KAAKV,IAAL,CAAUW,KAAV,CAAgBC,IAAhB,CAAqB,UAACC,CAAD;AAAA,uBAC1C,CAAC,OAAKN,WAAL,CAAiBC,YAAjB,GAAgCK,EAAEC,KAAF,IAAWT,IAAII,QAA/C,GAA0DI,EAAEE,aAAF,IAAmBT,OAA9E,KACCO,EAAEG,UAAF,IAAgBX,IAAIP,aAAJ,CAAkBmB,IAFO;AAAA,aAArB,CAAzB;;AAIA,gBAAIP,gBAAJ,EAAsB;;AAEtB,iBAAKV,IAAL,CAAUkB,OAAV,CAAkBb,IAAIP,aAAJ,CAAkBmB,IAApC,EAA0CX,OAA1C;AACH;AAtBL;AAAA;AAAA,+BAwBkB;AAAA;AAAA;;AAAA,8CAANa,IAAM;AAANA,oBAAM;AAAA;;AACV,gBAAIA,KAAKC,MAAL,IAAe,CAAf,IAAoB,OAAOD,KAAKA,KAAKC,MAAL,GAAc,CAAnB,CAAP,IAAgC,UAAxD,EAAoE;AAChE,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA;;AACpC,oCAAKvB,IAAL,EAAUwB,IAAV,cAAkBL,IAAlB,SAAwB,UAACM,GAAD,EAAMC,GAAN,EAAc;AAClC,4BAAID,GAAJ,EAAS,OAAOF,OAAOE,GAAP,CAAP;AACTH,gCAAQI,GAAR;AACH,qBAHD;AAIH,iBALM,CAAP;AAMH;;AAED,2BAAK1B,IAAL,EAAUwB,IAAV,eAAkBL,IAAlB;AACH;AAnCL;AAAA;AAAA,4BAqCe;AACP,mBAAO,KAAP;AACH;AAvCL;AAAA;AAAA,4BAwCe;AACP,mBAAO,KAAP;AACH;AA1CL;;AAAA;AAAA,EAAyC1B,YAAYF,aAAaG,SAAb,CAAZ,CAAzC","file":"requester.js","sourcesContent":["const Configurable = require('./configurable');\nconst Monitorable = require('./monitorable');\nconst Component = require('./component');\nconst axon = require('@dashersw/axon');\n\nmodule.exports = class Requester extends Monitorable(Configurable(Component)) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.sock = new axon.types[this.type]();\n        this.sock.set('retry timeout', 0);\n\n        this.startDiscovery();\n    }\n\n    onAdded(obj) {\n        super.onAdded(obj);\n\n        const address = this.constructor.useHostNames ? obj.hostName : obj.address;\n\n        const alreadyConnected = this.sock.socks.some((s) =>\n            (this.constructor.useHostNames ? s._host == obj.hostName : s.remoteAddress == address) &&\n             s.remotePort == obj.advertisement.port);\n\n        if (alreadyConnected) return;\n\n        this.sock.connect(obj.advertisement.port, address);\n    }\n\n    send(...args) {\n        if (args.length == 1 || typeof args[args.length - 1] != 'function') {\n            return new Promise((resolve, reject) => {\n                this.sock.send(...args, (err, res) => {\n                    if (err) return reject(err);\n                    resolve(res);\n                });\n            });\n        }\n\n        this.sock.send(...args);\n    }\n\n    get type() {\n        return 'req';\n    }\n    get oppo() {\n        return 'rep';\n    }\n};\n"]}