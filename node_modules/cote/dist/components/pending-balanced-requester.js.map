{"version":3,"sources":["../../src/components/pending-balanced-requester.js"],"names":["Requester","require","_","uuid","module","exports","advertisement","discoveryOptions","sock","on","v4","socks","length","forEach","s","count","callbacks","cb","n","indexOf","minBy","args","rv","prototype","send","apply","sentSock","cbId","identity","ids"],"mappings":";;;;;;;;;;AAAA,IAAMA,YAAYC,QAAQ,aAAR,CAAlB;AACA,IAAMC,IAAID,QAAQ,QAAR,CAAV;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEAG,OAAOC,OAAP;AAAA;;AACI,sCAAYC,aAAZ,EAA2BC,gBAA3B,EAA6C;AAAA;;AAAA,wJACnCD,aADmC,EACpBC,gBADoB;;AAGzC,cAAKC,IAAL,CAAUC,EAAV,CAAa,SAAb,EAAwB,UAASD,IAAT,EAAe;AACnCA,iBAAKL,IAAL,GAAYA,KAAKO,EAAL,EAAZ;AACH,SAFD;AAHyC;AAM5C;;AAPL;AAAA;AAAA,+BASkB;AACV,gBAAMF,OAAO,KAAKA,IAAlB;;AAEA,gBAAIA,KAAKG,KAAL,CAAWC,MAAf,EAAuB;AACnBJ,qBAAKG,KAAL,CAAWE,OAAX,CAAmB,UAASC,CAAT,EAAY;AAC3BA,sBAAEC,KAAF,GAAU,CAAV;AACH,iBAFD;;AAIAb,kBAAEW,OAAF,CAAUL,KAAKQ,SAAf,EAA0B,UAASC,EAAT,EAAa;AACnCA,uBAAGT,IAAH,IAAWS,GAAGT,IAAH,CAAQO,KAAR,EAAX;AACH,iBAFD;;AAIAP,qBAAKU,CAAL,GAASV,KAAKG,KAAL,CAAWQ,OAAX,CAAmBjB,EAAEkB,KAAF,CAAQZ,KAAKG,KAAb,EAAoB,OAApB,CAAnB,CAAT;AACH;;AAbS,8CAANU,IAAM;AAANA,oBAAM;AAAA;;AAeV,gBAAMC,KAAKtB,UAAUuB,SAAV,CAAoBC,IAApB,CAAyBC,KAAzB,CAA+B,IAA/B,EAAqCJ,IAArC,CAAX;;AAEA,gBAAI,CAACb,KAAKG,KAAL,CAAWC,MAAhB,EAAwB,OAAOU,EAAP;;AAExB,gBAAMI,WAAWlB,KAAKG,KAAL,CAAWH,KAAKU,CAAL,GAAS,CAApB,CAAjB;;AAEA,gBAAMS,OAAOnB,KAAKoB,QAAL,GAAgB,GAAhB,IAAuBpB,KAAKqB,GAAL,GAAW,CAAlC,CAAb;AACArB,iBAAKQ,SAAL,CAAeW,IAAf,EAAqBnB,IAArB,GAA4BkB,QAA5B;;AAEA,mBAAOJ,MAAMI,SAASvB,IAAtB;AACH;AAlCL;;AAAA;AAAA,EAAwDH,SAAxD","file":"pending-balanced-requester.js","sourcesContent":["const Requester = require('./requester');\nconst _ = require('lodash');\nconst uuid = require('uuid');\n\nmodule.exports = class PendingBalancedRequester extends Requester {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.sock.on('connect', function(sock) {\n            sock.uuid = uuid.v4();\n        });\n    };\n\n    send(...args) {\n        const sock = this.sock;\n\n        if (sock.socks.length) {\n            sock.socks.forEach(function(s) {\n                s.count = 0;\n            });\n\n            _.forEach(sock.callbacks, function(cb) {\n                cb.sock && cb.sock.count++;\n            });\n\n            sock.n = sock.socks.indexOf(_.minBy(sock.socks, 'count'));\n        }\n\n        const rv = Requester.prototype.send.apply(this, args);\n\n        if (!sock.socks.length) return rv;\n\n        const sentSock = sock.socks[sock.n - 1];\n\n        const cbId = sock.identity + ':' + (sock.ids - 1);\n        sock.callbacks[cbId].sock = sentSock;\n\n        return rv || sentSock.uuid;\n    };\n};\n"]}